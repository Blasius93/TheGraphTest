// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AnnualizedFeeSet extends ethereum.Event {
  get params(): AnnualizedFeeSet__Params {
    return new AnnualizedFeeSet__Params(this);
  }
}

export class AnnualizedFeeSet__Params {
  _event: AnnualizedFeeSet;

  constructor(event: AnnualizedFeeSet) {
    this._event = event;
  }

  get fee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class CapSet extends ethereum.Event {
  get params(): CapSet__Params {
    return new CapSet__Params(this);
  }
}

export class CapSet__Params {
  _event: CapSet;

  constructor(event: CapSet) {
    this._event = event;
  }

  get cap(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class EntryFeeBeneficiaryShareSet extends ethereum.Event {
  get params(): EntryFeeBeneficiaryShareSet__Params {
    return new EntryFeeBeneficiaryShareSet__Params(this);
  }
}

export class EntryFeeBeneficiaryShareSet__Params {
  _event: EntryFeeBeneficiaryShareSet;

  constructor(event: EntryFeeBeneficiaryShareSet) {
    this._event = event;
  }

  get share(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class EntryFeeSet extends ethereum.Event {
  get params(): EntryFeeSet__Params {
    return new EntryFeeSet__Params(this);
  }
}

export class EntryFeeSet__Params {
  _event: EntryFeeSet;

  constructor(event: EntryFeeSet) {
    this._event = event;
  }

  get fee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ExitFeeBeneficiaryShareSet extends ethereum.Event {
  get params(): ExitFeeBeneficiaryShareSet__Params {
    return new ExitFeeBeneficiaryShareSet__Params(this);
  }
}

export class ExitFeeBeneficiaryShareSet__Params {
  _event: ExitFeeBeneficiaryShareSet;

  constructor(event: ExitFeeBeneficiaryShareSet) {
    this._event = event;
  }

  get share(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ExitFeeSet extends ethereum.Event {
  get params(): ExitFeeSet__Params {
    return new ExitFeeSet__Params(this);
  }
}

export class ExitFeeSet__Params {
  _event: ExitFeeSet;

  constructor(event: ExitFeeSet) {
    this._event = event;
  }

  get fee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class FeeBeneficiarySet extends ethereum.Event {
  get params(): FeeBeneficiarySet__Params {
    return new FeeBeneficiarySet__Params(this);
  }
}

export class FeeBeneficiarySet__Params {
  _event: FeeBeneficiarySet;

  constructor(event: FeeBeneficiarySet) {
    this._event = event;
  }

  get beneficiary(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class FeeCharged extends ethereum.Event {
  get params(): FeeCharged__Params {
    return new FeeCharged__Params(this);
  }
}

export class FeeCharged__Params {
  _event: FeeCharged;

  constructor(event: FeeCharged) {
    this._event = event;
  }

  get amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class LockSet extends ethereum.Event {
  get params(): LockSet__Params {
    return new LockSet__Params(this);
  }
}

export class LockSet__Params {
  _event: LockSet;

  constructor(event: LockSet) {
    this._event = event;
  }

  get lockBlock(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class PoolExited extends ethereum.Event {
  get params(): PoolExited__Params {
    return new PoolExited__Params(this);
  }
}

export class PoolExited__Params {
  _event: PoolExited;

  constructor(event: PoolExited) {
    this._event = event;
  }

  get who(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _referral(): i32 {
    return this._event.parameters[2].value.toI32();
  }
}

export class PoolJoined extends ethereum.Event {
  get params(): PoolJoined__Params {
    return new PoolJoined__Params(this);
  }
}

export class PoolJoined__Params {
  _event: PoolJoined;

  constructor(event: PoolJoined) {
    this._event = event;
  }

  get who(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _referral(): i32 {
    return this._event.parameters[2].value.toI32();
  }
}

export class TokenAdded extends ethereum.Event {
  get params(): TokenAdded__Params {
    return new TokenAdded__Params(this);
  }
}

export class TokenAdded__Params {
  _event: TokenAdded;

  constructor(event: TokenAdded) {
    this._event = event;
  }

  get _token(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class TokenRemoved extends ethereum.Event {
  get params(): TokenRemoved__Params {
    return new TokenRemoved__Params(this);
  }
}

export class TokenRemoved__Params {
  _event: TokenRemoved;

  constructor(event: TokenRemoved) {
    this._event = event;
  }

  get _token(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class BasketFacet__calcTokensForAmountResult {
  value0: Array<Address>;
  value1: Array<BigInt>;

  constructor(value0: Array<Address>, value1: Array<BigInt>) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddressArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    return map;
  }
}

export class BasketFacet__calcTokensForAmountExitResult {
  value0: Array<Address>;
  value1: Array<BigInt>;

  constructor(value0: Array<Address>, value1: Array<BigInt>) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddressArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    return map;
  }
}

export class BasketFacet extends ethereum.SmartContract {
  static bind(address: Address): BasketFacet {
    return new BasketFacet("BasketFacet", address);
  }

  HUNDRED_PERCENT(): BigInt {
    let result = super.call(
      "HUNDRED_PERCENT",
      "HUNDRED_PERCENT():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_HUNDRED_PERCENT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "HUNDRED_PERCENT",
      "HUNDRED_PERCENT():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_ANNUAL_FEE(): BigInt {
    let result = super.call("MAX_ANNUAL_FEE", "MAX_ANNUAL_FEE():(uint256)", []);

    return result[0].toBigInt();
  }

  try_MAX_ANNUAL_FEE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_ANNUAL_FEE",
      "MAX_ANNUAL_FEE():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_ENTRY_FEE(): BigInt {
    let result = super.call("MAX_ENTRY_FEE", "MAX_ENTRY_FEE():(uint256)", []);

    return result[0].toBigInt();
  }

  try_MAX_ENTRY_FEE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_ENTRY_FEE",
      "MAX_ENTRY_FEE():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_EXIT_FEE(): BigInt {
    let result = super.call("MAX_EXIT_FEE", "MAX_EXIT_FEE():(uint256)", []);

    return result[0].toBigInt();
  }

  try_MAX_EXIT_FEE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("MAX_EXIT_FEE", "MAX_EXIT_FEE():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_TOKENS(): BigInt {
    let result = super.call("MAX_TOKENS", "MAX_TOKENS():(uint256)", []);

    return result[0].toBigInt();
  }

  try_MAX_TOKENS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("MAX_TOKENS", "MAX_TOKENS():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MIN_AMOUNT(): BigInt {
    let result = super.call("MIN_AMOUNT", "MIN_AMOUNT():(uint256)", []);

    return result[0].toBigInt();
  }

  try_MIN_AMOUNT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("MIN_AMOUNT", "MIN_AMOUNT():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balance(_token: Address): BigInt {
    let result = super.call("balance", "balance(address):(uint256)", [
      ethereum.Value.fromAddress(_token)
    ]);

    return result[0].toBigInt();
  }

  try_balance(_token: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balance", "balance(address):(uint256)", [
      ethereum.Value.fromAddress(_token)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  calcOutStandingAnnualizedFee(): BigInt {
    let result = super.call(
      "calcOutStandingAnnualizedFee",
      "calcOutStandingAnnualizedFee():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_calcOutStandingAnnualizedFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calcOutStandingAnnualizedFee",
      "calcOutStandingAnnualizedFee():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  calcTokensForAmount(_amount: BigInt): BasketFacet__calcTokensForAmountResult {
    let result = super.call(
      "calcTokensForAmount",
      "calcTokensForAmount(uint256):(address[],uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_amount)]
    );

    return new BasketFacet__calcTokensForAmountResult(
      result[0].toAddressArray(),
      result[1].toBigIntArray()
    );
  }

  try_calcTokensForAmount(
    _amount: BigInt
  ): ethereum.CallResult<BasketFacet__calcTokensForAmountResult> {
    let result = super.tryCall(
      "calcTokensForAmount",
      "calcTokensForAmount(uint256):(address[],uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_amount)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BasketFacet__calcTokensForAmountResult(
        value[0].toAddressArray(),
        value[1].toBigIntArray()
      )
    );
  }

  calcTokensForAmountExit(
    _amount: BigInt
  ): BasketFacet__calcTokensForAmountExitResult {
    let result = super.call(
      "calcTokensForAmountExit",
      "calcTokensForAmountExit(uint256):(address[],uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_amount)]
    );

    return new BasketFacet__calcTokensForAmountExitResult(
      result[0].toAddressArray(),
      result[1].toBigIntArray()
    );
  }

  try_calcTokensForAmountExit(
    _amount: BigInt
  ): ethereum.CallResult<BasketFacet__calcTokensForAmountExitResult> {
    let result = super.tryCall(
      "calcTokensForAmountExit",
      "calcTokensForAmountExit(uint256):(address[],uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_amount)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BasketFacet__calcTokensForAmountExitResult(
        value[0].toAddressArray(),
        value[1].toBigIntArray()
      )
    );
  }

  getAnnualizedFee(): BigInt {
    let result = super.call(
      "getAnnualizedFee",
      "getAnnualizedFee():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getAnnualizedFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAnnualizedFee",
      "getAnnualizedFee():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCap(): BigInt {
    let result = super.call("getCap", "getCap():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getCap(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getCap", "getCap():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getEntryFee(): BigInt {
    let result = super.call("getEntryFee", "getEntryFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getEntryFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getEntryFee", "getEntryFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getEntryFeeBeneficiaryShare(): BigInt {
    let result = super.call(
      "getEntryFeeBeneficiaryShare",
      "getEntryFeeBeneficiaryShare():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getEntryFeeBeneficiaryShare(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getEntryFeeBeneficiaryShare",
      "getEntryFeeBeneficiaryShare():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getExitFee(): BigInt {
    let result = super.call("getExitFee", "getExitFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getExitFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getExitFee", "getExitFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getExitFeeBeneficiaryShare(): BigInt {
    let result = super.call(
      "getExitFeeBeneficiaryShare",
      "getExitFeeBeneficiaryShare():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getExitFeeBeneficiaryShare(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getExitFeeBeneficiaryShare",
      "getExitFeeBeneficiaryShare():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getFeeBeneficiary(): Address {
    let result = super.call(
      "getFeeBeneficiary",
      "getFeeBeneficiary():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getFeeBeneficiary(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getFeeBeneficiary",
      "getFeeBeneficiary():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getLock(): boolean {
    let result = super.call("getLock", "getLock():(bool)", []);

    return result[0].toBoolean();
  }

  try_getLock(): ethereum.CallResult<boolean> {
    let result = super.tryCall("getLock", "getLock():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getLockBlock(): BigInt {
    let result = super.call("getLockBlock", "getLockBlock():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getLockBlock(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getLockBlock", "getLockBlock():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTokenInPool(_token: Address): boolean {
    let result = super.call(
      "getTokenInPool",
      "getTokenInPool(address):(bool)",
      [ethereum.Value.fromAddress(_token)]
    );

    return result[0].toBoolean();
  }

  try_getTokenInPool(_token: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getTokenInPool",
      "getTokenInPool(address):(bool)",
      [ethereum.Value.fromAddress(_token)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getTokens(): Array<Address> {
    let result = super.call("getTokens", "getTokens():(address[])", []);

    return result[0].toAddressArray();
  }

  try_getTokens(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall("getTokens", "getTokens():(address[])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }
}

export class AddTokenCall extends ethereum.Call {
  get inputs(): AddTokenCall__Inputs {
    return new AddTokenCall__Inputs(this);
  }

  get outputs(): AddTokenCall__Outputs {
    return new AddTokenCall__Outputs(this);
  }
}

export class AddTokenCall__Inputs {
  _call: AddTokenCall;

  constructor(call: AddTokenCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddTokenCall__Outputs {
  _call: AddTokenCall;

  constructor(call: AddTokenCall) {
    this._call = call;
  }
}

export class ChargeOutstandingAnnualizedFeeCall extends ethereum.Call {
  get inputs(): ChargeOutstandingAnnualizedFeeCall__Inputs {
    return new ChargeOutstandingAnnualizedFeeCall__Inputs(this);
  }

  get outputs(): ChargeOutstandingAnnualizedFeeCall__Outputs {
    return new ChargeOutstandingAnnualizedFeeCall__Outputs(this);
  }
}

export class ChargeOutstandingAnnualizedFeeCall__Inputs {
  _call: ChargeOutstandingAnnualizedFeeCall;

  constructor(call: ChargeOutstandingAnnualizedFeeCall) {
    this._call = call;
  }
}

export class ChargeOutstandingAnnualizedFeeCall__Outputs {
  _call: ChargeOutstandingAnnualizedFeeCall;

  constructor(call: ChargeOutstandingAnnualizedFeeCall) {
    this._call = call;
  }
}

export class ExitPoolCall extends ethereum.Call {
  get inputs(): ExitPoolCall__Inputs {
    return new ExitPoolCall__Inputs(this);
  }

  get outputs(): ExitPoolCall__Outputs {
    return new ExitPoolCall__Outputs(this);
  }
}

export class ExitPoolCall__Inputs {
  _call: ExitPoolCall;

  constructor(call: ExitPoolCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _referral(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class ExitPoolCall__Outputs {
  _call: ExitPoolCall;

  constructor(call: ExitPoolCall) {
    this._call = call;
  }
}

export class JoinPoolCall extends ethereum.Call {
  get inputs(): JoinPoolCall__Inputs {
    return new JoinPoolCall__Inputs(this);
  }

  get outputs(): JoinPoolCall__Outputs {
    return new JoinPoolCall__Outputs(this);
  }
}

export class JoinPoolCall__Inputs {
  _call: JoinPoolCall;

  constructor(call: JoinPoolCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _referral(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class JoinPoolCall__Outputs {
  _call: JoinPoolCall;

  constructor(call: JoinPoolCall) {
    this._call = call;
  }
}

export class RemoveTokenCall extends ethereum.Call {
  get inputs(): RemoveTokenCall__Inputs {
    return new RemoveTokenCall__Inputs(this);
  }

  get outputs(): RemoveTokenCall__Outputs {
    return new RemoveTokenCall__Outputs(this);
  }
}

export class RemoveTokenCall__Inputs {
  _call: RemoveTokenCall;

  constructor(call: RemoveTokenCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveTokenCall__Outputs {
  _call: RemoveTokenCall;

  constructor(call: RemoveTokenCall) {
    this._call = call;
  }
}

export class SetAnnualizedFeeCall extends ethereum.Call {
  get inputs(): SetAnnualizedFeeCall__Inputs {
    return new SetAnnualizedFeeCall__Inputs(this);
  }

  get outputs(): SetAnnualizedFeeCall__Outputs {
    return new SetAnnualizedFeeCall__Outputs(this);
  }
}

export class SetAnnualizedFeeCall__Inputs {
  _call: SetAnnualizedFeeCall;

  constructor(call: SetAnnualizedFeeCall) {
    this._call = call;
  }

  get _fee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetAnnualizedFeeCall__Outputs {
  _call: SetAnnualizedFeeCall;

  constructor(call: SetAnnualizedFeeCall) {
    this._call = call;
  }
}

export class SetCapCall extends ethereum.Call {
  get inputs(): SetCapCall__Inputs {
    return new SetCapCall__Inputs(this);
  }

  get outputs(): SetCapCall__Outputs {
    return new SetCapCall__Outputs(this);
  }
}

export class SetCapCall__Inputs {
  _call: SetCapCall;

  constructor(call: SetCapCall) {
    this._call = call;
  }

  get _maxCap(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetCapCall__Outputs {
  _call: SetCapCall;

  constructor(call: SetCapCall) {
    this._call = call;
  }
}

export class SetEntryFeeCall extends ethereum.Call {
  get inputs(): SetEntryFeeCall__Inputs {
    return new SetEntryFeeCall__Inputs(this);
  }

  get outputs(): SetEntryFeeCall__Outputs {
    return new SetEntryFeeCall__Outputs(this);
  }
}

export class SetEntryFeeCall__Inputs {
  _call: SetEntryFeeCall;

  constructor(call: SetEntryFeeCall) {
    this._call = call;
  }

  get _fee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetEntryFeeCall__Outputs {
  _call: SetEntryFeeCall;

  constructor(call: SetEntryFeeCall) {
    this._call = call;
  }
}

export class SetEntryFeeBeneficiaryShareCall extends ethereum.Call {
  get inputs(): SetEntryFeeBeneficiaryShareCall__Inputs {
    return new SetEntryFeeBeneficiaryShareCall__Inputs(this);
  }

  get outputs(): SetEntryFeeBeneficiaryShareCall__Outputs {
    return new SetEntryFeeBeneficiaryShareCall__Outputs(this);
  }
}

export class SetEntryFeeBeneficiaryShareCall__Inputs {
  _call: SetEntryFeeBeneficiaryShareCall;

  constructor(call: SetEntryFeeBeneficiaryShareCall) {
    this._call = call;
  }

  get _share(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetEntryFeeBeneficiaryShareCall__Outputs {
  _call: SetEntryFeeBeneficiaryShareCall;

  constructor(call: SetEntryFeeBeneficiaryShareCall) {
    this._call = call;
  }
}

export class SetExitFeeCall extends ethereum.Call {
  get inputs(): SetExitFeeCall__Inputs {
    return new SetExitFeeCall__Inputs(this);
  }

  get outputs(): SetExitFeeCall__Outputs {
    return new SetExitFeeCall__Outputs(this);
  }
}

export class SetExitFeeCall__Inputs {
  _call: SetExitFeeCall;

  constructor(call: SetExitFeeCall) {
    this._call = call;
  }

  get _fee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetExitFeeCall__Outputs {
  _call: SetExitFeeCall;

  constructor(call: SetExitFeeCall) {
    this._call = call;
  }
}

export class SetExitFeeBeneficiaryShareCall extends ethereum.Call {
  get inputs(): SetExitFeeBeneficiaryShareCall__Inputs {
    return new SetExitFeeBeneficiaryShareCall__Inputs(this);
  }

  get outputs(): SetExitFeeBeneficiaryShareCall__Outputs {
    return new SetExitFeeBeneficiaryShareCall__Outputs(this);
  }
}

export class SetExitFeeBeneficiaryShareCall__Inputs {
  _call: SetExitFeeBeneficiaryShareCall;

  constructor(call: SetExitFeeBeneficiaryShareCall) {
    this._call = call;
  }

  get _share(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetExitFeeBeneficiaryShareCall__Outputs {
  _call: SetExitFeeBeneficiaryShareCall;

  constructor(call: SetExitFeeBeneficiaryShareCall) {
    this._call = call;
  }
}

export class SetFeeBeneficiaryCall extends ethereum.Call {
  get inputs(): SetFeeBeneficiaryCall__Inputs {
    return new SetFeeBeneficiaryCall__Inputs(this);
  }

  get outputs(): SetFeeBeneficiaryCall__Outputs {
    return new SetFeeBeneficiaryCall__Outputs(this);
  }
}

export class SetFeeBeneficiaryCall__Inputs {
  _call: SetFeeBeneficiaryCall;

  constructor(call: SetFeeBeneficiaryCall) {
    this._call = call;
  }

  get _beneficiary(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFeeBeneficiaryCall__Outputs {
  _call: SetFeeBeneficiaryCall;

  constructor(call: SetFeeBeneficiaryCall) {
    this._call = call;
  }
}

export class SetLockCall extends ethereum.Call {
  get inputs(): SetLockCall__Inputs {
    return new SetLockCall__Inputs(this);
  }

  get outputs(): SetLockCall__Outputs {
    return new SetLockCall__Outputs(this);
  }
}

export class SetLockCall__Inputs {
  _call: SetLockCall;

  constructor(call: SetLockCall) {
    this._call = call;
  }

  get _lock(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetLockCall__Outputs {
  _call: SetLockCall;

  constructor(call: SetLockCall) {
    this._call = call;
  }
}
